import sortBy from 'lodash/sortBy'

import { ASSETS_BASE_PATH } from '@/constants'
import {
  RCArbitrumLogo,
  RCAuroraLogo,
  RCAvalancheLogo,
  RCBaseLogo,
  RCBSCLogo,
  RCCeloLogo,
  RCEthereumLogo,
  RCFantomLogo,
  RCGnosisLogo,
  RCKavaLogo,
  RCMoonbeamLogo,
  RCOptimismLogo,
  RCPolygonLogo,
  RCZksyncLogo,
} from '@/ui/images'

const isDevelopment = process.env.NODE_ENV === 'development'
const CURVE_IMAGE_ASSETS_BASE_PATH = 'https://cdn.jsdelivr.net/gh/curvefi/curve-assets'

const DEFAULT_NETWORK_CONFIG = {
  blocknativeSupport: true,
  gasL2: false,
  gasPricesUnit: 'GWEI',
  gasPricesUrl: 'https://api.curve.fi/api/getGas',
  gasPricesDefault: 1,
  marketListFilter: ['all', 'user'],
  marketListFilterType: ['borrow', 'lend'],
  orgUIPath: 'https://classic.curve.fi',
  integrations: {
    imageBaseurl: 'https://cdn.jsdelivr.net/gh/curvefi/curve-assets/platforms',
    listUrl: 'https://cdn.jsdelivr.net/gh/curvefi/curve-external-integrations/integrations-list.json',
    tagsUrl: 'https://cdn.jsdelivr.net/gh/curvefi/curve-external-integrations/integrations-tags.json',
  },
  showInSelectNetwork: false,
}

const networks: Record<ChainId, NetworkConfig> = {
  1: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Ethereum',
    id: 'ethereum',
    hex: '0x1',
    networkId: 1,
    symbol: 'ETH',
    icon: RCEthereumLogo,
    imageBaseUrl: `${ASSETS_BASE_PATH}/images/assets/`,
    rpcUrlConnectWallet: `https://eth.drpc.org`,
    rpcUrl: isDevelopment
      ? process.env.NEXT_PUBLIC_ETHEREUM_DEV_RPC_URL!
      : `https://curve.drpc.org/ogrpc?network=ethereum`,
    showInSelectNetwork: true,
    scanAddressPath: (hash: string) => `https://etherscan.io/address/${hash}`,
    scanTxPath: (hash: string) => `https://etherscan.com/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://etherscan.io/token/${hash}`,
  },
  10: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Optimism',
    id: 'optimism',
    hex: '0xa',
    networkId: 10,
    symbol: 'ETH',
    gasL2: true,
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCOptimismLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-optimism/`,
    orgUIPath: 'https://optimism.curve.fi',
    rpcUrlConnectWallet: 'https://optimism.drpc.org',
    rpcUrl: isDevelopment
      ? process.env.NEXT_PUBLIC_OPTIMISM_DEV_RPC_URL!
      : 'https://curve.drpc.org/ogrpc?network=optimism',
    scanAddressPath: (hash: string) => `https://optimistic.etherscan.io/address/${hash}`,
    scanTxPath: (hash: string) => `https://optimistic.etherscan.io/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://optimistic.etherscan.io/token/${hash}`,
  },
  100: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Gnosis',
    id: 'xdai',
    hex: '0x64',
    networkId: 100,
    symbol: 'XDAI',
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCGnosisLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-xdai/`,
    orgUIPath: 'https://xdai.curve.fi',
    rpcUrlConnectWallet: 'https://rpc.gnosischain.com',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_GNOSIS_DEV_RPC_URL! : 'https://rpc.gnosischain.com',
    scanAddressPath: (hash: string) => `https://gnosisscan.io/address/${hash}`,
    scanTxPath: (hash: string) => `https://gnosisscan.io/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://gnosisscan.io/address/${hash}`,
  },
  1284: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Moonbeam',
    id: 'moonbeam',
    hex: '0x504',
    networkId: 1284,
    symbol: 'GLMR',
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCMoonbeamLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-moonbeam/`,
    orgUIPath: 'https://moonbeam.curve.fi',
    rpcUrlConnectWallet: 'https://moonbeam.public.blastapi.io',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_MOONBEAM_DEV_RPC_URL! : 'https://moonbeam.public.blastapi.io',
    scanAddressPath: (hash: string) => `https://moonscan.io/address/${hash}`,
    scanTxPath: (hash: string) => `https://moonscan.io/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://moonscan.io/address/${hash}`,
  },
  137: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Polygon',
    id: 'polygon',
    hex: '0x89',
    networkId: 137,
    symbol: 'MATIC',
    gasPricesUrl: 'https://gasstation.polygon.technology/v2',
    gasPricesDefault: 0,
    icon: RCPolygonLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-polygon/`,
    orgUIPath: 'https://polygon.curve.fi',
    rpcUrlConnectWallet: 'https://polygon-rpc.com',
    rpcUrl: isDevelopment
      ? process.env.NEXT_PUBLIC_POLYGON_DEV_RPC_URL!
      : 'https://curve.drpc.org/ogrpc?network=polygon',
    scanAddressPath: (hash: string) => `https://polygonscan.com/address/${hash}`,
    scanTxPath: (hash: string) => `https://polygonscan.com/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://polygonscan.com/token/${hash}`,
  },
  2222: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Kava',
    id: 'kava',
    hex: '0x8ae',
    networkId: 2222,
    symbol: 'KAVA',
    gasPricesUnit: 'UKAVA',
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCKavaLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-kava/`,
    orgUIPath: 'https://kava.curve.fi',
    rpcUrlConnectWallet: 'https://evm.kava.io',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_KAVA_DEV_RPC_URL! : 'https://evm.kava.io',
    scanAddressPath: (hash: string) => `https://explorer.kava.io/address/${hash}`,
    scanTxPath: (hash: string) => `https://explorer.kava.io/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://explorer.kava.io/address/${hash}`,
  },
  250: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Fantom',
    id: 'fantom',
    hex: '0xfa',
    networkId: 250,
    symbol: 'FTM',
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCFantomLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-fantom/`,
    orgUIPath: 'https://ftm.curve.fi',
    rpcUrlConnectWallet: 'https://rpc.ftm.tools/',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_FANTOM_DEV_RPC_URL! : 'https://rpc.ftm.tools/',
    scanAddressPath: (hash: string) => `https://ftmscan.com/address/${hash}`,
    scanTxPath: (hash: string) => `https://ftmscan.com/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://ftmscan.com/token/${hash}`,
  },
  42161: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Arbitrum',
    id: 'arbitrum',
    hex: '0xa4b1',
    networkId: 42161,
    symbol: 'ETH',
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCArbitrumLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-arbitrum/`,
    orgUIPath: 'https://arbitrum.curve.fi',
    rpcUrlConnectWallet: 'https://arb1.arbitrum.io/rpc',
    rpcUrl: isDevelopment
      ? process.env.NEXT_PUBLIC_ARBITRUM_DEV_RPC_URL!
      : 'https://curve.drpc.org/ogrpc?network=arbitrum',
    scanAddressPath: (hash: string) => `https://arbiscan.io/address/${hash}`,
    scanTxPath: (hash: string) => `https://arbiscan.io/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://arbiscan.io/token/${hash}`,
  },
  43114: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Avalanche',
    id: 'avalanche',
    hex: '0xa86a',
    networkId: 43114,
    symbol: 'AVAX',
    gasPricesUnit: 'nAVAX',
    gasPricesUrl: 'https://api.avax.network/ext/bc/C/rpc',
    gasPricesDefault: 0,
    icon: RCAvalancheLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-avalanche/`,
    orgUIPath: 'https://avax.curve.fi',
    rpcUrlConnectWallet: 'https://api.avax.network/ext/bc/C/rpc',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_AVALANCHE_DEV_RPC_URL! : 'https://api.avax.network/ext/bc/C/rpc',
    scanAddressPath: (hash: string) => `https://snowtrace.io/address/${hash}`,
    scanTxPath: (hash: string) => `https://snowtrace.io/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://snowtrace.io/token/${hash}`,
  },
  42220: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Celo',
    id: 'celo',
    hex: '0xa4ec',
    networkId: 42220,
    symbol: 'CELO',
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCCeloLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-celo/`,
    orgUIPath: 'https://celo.curve.fi',
    rpcUrlConnectWallet: 'https://forno.celo.org',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_CELO_DEV_RPC_URL! : 'https://forno.celo.org',
    scanAddressPath: (hash: string) => `https://celoscan.io/address/${hash}`,
    scanTxPath: (hash: string) => `https://celoscan.io/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://celoscan.io/address/${hash}`,
  },
  1313161554: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Aurora',
    id: 'aurora',
    hex: '0x4e454152',
    networkId: 1313161554,
    symbol: 'aETH',
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCAuroraLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-aurora/`,
    orgUIPath: 'https://aurora.curve.fi',
    rpcUrlConnectWallet: 'https://mainnet.aurora.dev',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_AURORA_DEV_RPC_URL! : 'https://mainnet.aurora.dev',
    scanAddressPath: (hash: string) => `https://aurorascan.dev/address/${hash}`,
    scanTxPath: (hash: string) => `https://aurorascan.dev/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://aurorascan.dev/address/${hash}`,
  },
  324: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'zkSync Era',
    id: 'zksync',
    hex: '0x144',
    networkId: 324,
    symbol: 'ETH',
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCZksyncLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-zksync/`,
    orgUIPath: '',
    rpcUrlConnectWallet: 'https://mainnet.era.zksync.io',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_ZKSYNC_DEV_RPC_URL! : 'https://mainnet.era.zksync.io',
    scanAddressPath: (hash: string) => `https://explorer.zksync.io/address/${hash}`,
    scanTxPath: (hash: string) => `https://explorer.zksync.io/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://explorer.zksync.io/token/${hash}`,
  },
  8453: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'Base',
    id: 'base',
    hex: '0x2105',
    networkId: 8453,
    symbol: 'ETH',
    gasL2: true,
    gasPricesUrl: '',
    gasPricesDefault: 0,
    icon: RCBaseLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-base/`,
    orgUIPath: '',
    rpcUrlConnectWallet: 'https://base.drpc.org',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_BASE_DEV_RPC_URL! : 'https://curve.drpc.org/ogrpc?network=base',
    scanAddressPath: (hash: string) => `https://basescan.org/address/${hash}`,
    scanTxPath: (hash: string) => `https://basescan.org/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://basescan.org/token/${hash}`,
  },
  56: {
    ...DEFAULT_NETWORK_CONFIG,
    name: 'BSC',
    id: 'bsc',
    hex: '0x38',
    networkId: 56,
    symbol: 'BNB',
    icon: RCBSCLogo,
    imageBaseUrl: `${CURVE_IMAGE_ASSETS_BASE_PATH}/images/assets-bsc/`,
    orgUIPath: '',
    rpcUrlConnectWallet: 'https://bsc-dataseed1.binance.org/',
    rpcUrl: isDevelopment ? process.env.NEXT_PUBLIC_BSC_DEV_RPC_URL! : 'https://curve.drpc.org/ogrpc?network=bsc',
    scanAddressPath: (hash: string) => `https://bscscan.com/address/${hash}`,
    scanTxPath: (hash: string) => `https://bscscan.com/tx/${hash}`,
    scanTokenPath: (hash: string) => `https://bscscan.com/token/${hash}`,
  },
}

export const networksIdMapper = Object.keys(networks).reduce((prev, chainId: unknown) => {
  const networkConfig = networks[chainId as ChainId]
  prev[networkConfig.id] = networkConfig.networkId
  return prev
}, {} as Record<NetworkEnum, ChainId>)

export const visibleNetworksList = sortBy(
  Object.keys(networks)
    .filter((chainId) => networks[+chainId as ChainId].showInSelectNetwork)
    .map((chainId: unknown) => {
      const networkConfig = networks[chainId as ChainId]
      return { icon: networkConfig.icon, label: networkConfig.name, chainId: networkConfig.networkId }
    }),
  (n) => n.label
)

export default networks
